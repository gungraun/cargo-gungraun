# TODO: Revert exclusion of system-tests
# [workspace]
# members = ["system-tests"]

[package]
authors = ["gamma0987 <gamma0987@posteo.de>"]
# TODO: categories
categories = []
# TODO: description
description = """
"""
edition = "2021"
homepage = "https://github.com/gamma0987/cargo-gungraun"
# TODO: keywords
keywords = []
license = "Apache-2.0 OR MIT"
name = "cargo-gungraun"
readme = "README.md"
repository = "https://github.com/gamma0987/cargo-gungraun"
rust-version = "1.74.1"
version = "0.1.0"

[features]
default = ["std"]
std = []

[[bin]]
path = "src/main.rs"
name = "cargo-gungraun"

[dependencies]
anyhow = "1.0.20"
camino = "1.2"
clap_lex = "0.7"
colored = { version = ">=2.2, <4" }
csv = "1"
env_logger = { version = "0.11" }
hex = "0.4"
home = "0.5"
log = "0.4.8"
rand = "0.9"
serde = { version = "1.0.166", features = ["derive"] }
serde_json = "1.0.100"
simplematch = "0.3.1"
which = "8"

[dev-dependencies]
rstest = "0.26.1"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
missing_docs = "warn"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
allow_attributes = "warn"
arbitrary_source_item_ordering = "warn"
assertions_on_result_states = "warn"
bool_assert_comparison = "allow"
branches_sharing_code = "warn"
collection_is_never_read = "warn"
create_dir = "warn"
dbg_macro = "warn"
derive_partial_eq_without_eq = "warn"
doc_link_code = "warn"
else_if_without_else = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
enum_glob_use = "allow"
equatable_if_let = "warn"
fallible_impl_from = "warn"
fn_to_numeric_cast_any = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
infinite_loop = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
literal_string_with_formatting_args = "warn"
lossy_float_literal = "warn"
map_with_unused_argument_over_ranges = "warn"
missing_const_for_fn = "warn"
mixed_read_write_in_expression = "warn"
module_name_repetitions = "allow"
multiple_inherent_impl = "warn"
needless_collect = "warn"
needless_pass_by_ref_mut = "warn"
needless_raw_strings = "warn"
non_zero_suggestions = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
partial_pub_fields = "warn"
path_buf_push_overwrite = "warn"
pathbuf_init_then_push = "warn"
precedence_bits = "warn"
pub_without_shorthand = "warn"
rc_mutex = "warn"
redundant_clone = "warn"
redundant_pub_crate = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_self_not_must_use = "allow"
same_name_method = "warn"
semicolon_inside_block = "warn"
single_option_map = "warn"
std_instead_of_core = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
suspicious_xor_used_as_pow = "warn"
todo = "warn"
too_long_first_doc_paragraph = "warn"
trait_duplication_in_bounds = "warn"
try_err = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unneeded_field_pattern = "warn"
unused_peekable = "warn"
unused_result_ok = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
verbose_file_reads = "warn"
